<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="toonCommentSQL">
	<insert id="toonCommentWrite" parameterType="toonComment">
		insert into tooncomment 
			values(commentseq_tooncomment.nextval,
					#{episodeCode},		
					#{id},
					#{content},
					commentseq_tooncomment.nextval,
					0,
					0,
					0,
					sysdate
					,0)
	</insert>
	<select id="getToonCommentList" parameterType="int" resultType="toonComment">
		<!-- select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where episodecode='1'
		<![CDATA[order by (case when totalgood > 10 then 1 else 2 end), commentseq desc]]> -->
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) 
		using(commentseq) 
		where episodecode=#{episodecode}
		order by totalgood desc NULLS LAST
	</select>
	<select id="sortLatest" parameterType="int" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) 
		using(commentseq) 
		where episodecode=#{episodecode}
		order by commentseq desc
	</select>
	<select id="getCommentGood" parameterType="int" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where commentseq=#{commentseq}
	</select>
	<select id="getToonCommentCount" parameterType="int" resultType="int">
		select count(*) from tooncomment where episodecode=#{episodecode} and lev=0
	</select>
	<select id="commentCheckId" parameterType="toonComment" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) 
        using(commentseq) 
		where id=#{id} and episodecode=#{episodeCode}
		order by commentseq desc
	</select>
	<delete id="commentDelete" parameterType="int">
		delete from tooncomment where commentseq=#{commentSeq} or ref =#{commentSeq}
		<!-- 기본키 외래키 제약조건 걸어둠 
		alter table commentgoodbad add constraint tooncomment_pk
                                foreign key (commentseq)
                                references tooncomment(commentseq) on delete cascade;   -->
	</delete>
	<select id="getPcomment" parameterType="int" resultType="toonComment">
		select * from tooncomment where commentseq=#{commentSeq}
	</select>
	
	<!-- 답글 -->
	<insert id="toonCommentReplyWrite" parameterType="toonComment">
		begin
			update tooncomment set step=step+1 where ref=#{ref} and  step>#{step};
			
			insert into tooncomment values(commentseq_tooncomment.nextval
								  ,#{episodeCode}
								   , #{id}
								   , #{content}
								   , #{ref}     <!-- 원글ref -->
								   , #{lev}+1   <!-- 원글lev + 1 -->
								   , #{step}+1  <!-- 원글step + 1 -->
								   , #{pseq}    <!-- 원글번호 -->
								   , sysdate
								   , 0 );         <!-- 답글수 -->

								   
			update tooncomment set reply=reply+1 where commentseq=#{pseq};							   
		end;
	</insert>
	<select id="getToonCommentReplyList" parameterType="int" resultType="toonComment">
		select * from tooncomment <![CDATA[ where lev>0 and ref = #{ref} order by step desc]]>
	</select>
	<select id="replytotal" parameterType="int" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) 
		using(commentseq) 
		where commentseq=#{commentSeq}
	</select>
	<delete id="replyDelete" parameterType="toonComment">
		begin
			update tooncomment set reply=reply-1 where commentseq=#{pseq};
			
			delete tooncomment where commentseq=#{commentSeq};
		end;
	</delete>
</mapper>