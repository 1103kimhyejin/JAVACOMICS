<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="toonCommentSQL">
	<insert id="toonCommentWrite" parameterType="toonComment">
		insert into tooncomment 
			values(commentseq_tooncomment.nextval,
					#{episodeCode},		
					#{id},
					#{content},
					commentseq_tooncomment.nextval,
					0,
					0,
					0,
					sysdate
					,0)
	</insert>
	<select id="getToonCommentList" parameterType="int" resultType="toonComment">
		<!-- select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where episodecode='1'
		<![CDATA[order by (case when totalgood > 10 then 1 else 2 end), commentseq desc]]> -->
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where episodecode=#{episodecode}
		order by totalgood desc NULLS LAST
	</select>
	<select id="sortLatest" parameterType="int" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where episodecode=#{episodecode}
		order by commentseq desc
	</select>
	<select id="getCommentGood" parameterType="int" resultType="toonComment">
		select *
		from tooncomment left join 
		(select commentseq ,count(commentgood) as totalgood, count(commentbad) as totalbad 
		from commentgoodbad group by commentseq) using(commentseq) 
		where commentseq=#{commentseq}
	</select>
	<select id="getToonCommentCount" parameterType="int" resultType="int">
		select count(*) from tooncomment where episodecode=#{episodecode}
	</select>
	
	
</mapper>